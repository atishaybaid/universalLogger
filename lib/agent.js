"use strict"; self.Agent = function () { function a() { this.isTokenValidated = !1, this.staticToken = "123456", this.apiBase = "http://localhost:9000", this.errorAPI = "".concat(this.apiBase, "/record/error"), this.allowedOrigin = ["http://localhost:8080", "https://app.birdeye.com"], this.directoryName = "" } return a.prototype.install = function (a) { var b = a.token; b == this.staticToken && (this.isTokenValidated = !0, console.log("token validated sucessfully")), this.isTokenValidated && (this.watchWindowErrors(), this.watchPromiseErrors(), this.getLogFileName(a)) }, a.prototype.getLogFileName = function (a) { var b = a.directoryName; this.directoryName = b }, a.prototype.hashCode = function () { var a, b, c = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", d = 0; if (0 === c.length) return d; for (a = 0; a < c.length; a++)b = c.charCodeAt(a), d = (d << 5) - d + b, d |= 0; return d }, a.prototype.sendError = function (a) { var b = new XMLHttpRequest, c = this.errorAPI; b.open("POST", c, !0), b.setRequestHeader("Content-Type", "application/json"), b.onreadystatechange = function () { 4 != b.readyState || 200 != b.status }, b.send(a) }, a.prototype.watchWindowErrors = function () { var a = this; self.onerror = function (b, c, d, e, f) { var g = b.toLowerCase(); if (-1 < g.indexOf("script error")) console.log("script error"); else { var h = ["Message: " + b, "URL: " + c, "Line: " + d, "Column: " + e, "Error object: " + JSON.stringify(f)].join(" - "), i = { error: h, toJSON: function toJSON() { return { errorMessage: "message", stack: "", pageUrl: window.location.href, directoryName: a.directoryName } } }; a.sendError(JSON.stringify(i)) } return !0 } }, a.prototype.flatten = function (a) { var b = Object.create(a); for (var c in b) b[c] = b[c]; return b }, a.prototype.watchPromiseErrors = function () { var a = this; console.log("hello"), self.addEventListener("unhandledrejection", function (b) { var c = { error: b.reason, toJSON: function toJSON() { return { errorMessage: b.reason.message, stack: b.reason.stack, pageUrl: window.location.href, directoryName: a.directoryName } } }; a.sendError(JSON.stringify(c)) }) }, new a }();